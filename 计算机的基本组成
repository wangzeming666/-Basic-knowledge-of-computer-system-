  硬件
  基本的计算机硬件系统由运算器、控制器、存储器、输入设备和输出设备5大部件组成，随着网络技术的发展，通信部件也逐渐成为其基本构件。
  运算器和控制器及其相关部件已被集成在一起，统称为中央处理单元(Central Processing Unit, CPU)。用于数据的加工处理，能完成成各种算数、逻辑运算及控制功能。
  运算器是对数据进行加工处理的部件，它主要完成算数和逻辑运算。控制器的主要功能则是从主存中取出指令并进行分析，控制计算机的各个部件有条不紊的完成指令的功能。
  存储器是计算机系统中的记忆设备，分为内部存储器(Main Memory, MM, 简称内存、主存)和外部存储器（简称外存）。内存速度快、容量小，一般用来临时存储计算机运行
时所需的程序、数据及中间结果。外存容量大、速度慢，可用于长期保存信息。寄存器是CPU中的记忆器件，用来临时存放指令、数据及运算结果。与内存储器相比，寄存器的速度
要快得多。
  习惯上将CPU和主存器的有机组合称为主机。输入/输出设备位于主机之外，是计算机系统与外界交换信息的装置。
  
  计算机软件是指为管理、运行、维护及应用计算机系统所开发的程序和相关文档的集合。
  
  计算机的分类：
  按照体积和工作能力，计算机分为巨型机、大型机、小型机和微型机。
  按照功能是否专一，计算机分为通用计算机和专用（嵌入式）计算机。
  按照CPU的指令系统架构，计算机分为复杂指令系统计算机（CISC）和精简指令系统计算机（RISC）。
  按体系结构及指令处理方式，计算机分为单指令流单数据流计算机、单指令流多数据流计算机、多指令流单数据流计算机和多指令流多数据流计算机。
  
  进位计数制及其转换：
  在采用进位计数的数字系统中，如果只用r个基本符号表示数值，则称其为r进制，r称为该数制的基数。不同数制的特点如下：
  每一种数制都有固定的符号集。例如二进制0和1。
  每一种数制都使用位置表示法。即处于不同位置的数符所代表的值不同，与它所在位置的权值有关。
  各种进位计数制中权的值恰好是基数的某次幂。对于任何一种进位计数制表示的值都可以写成按权展开的多项式。
  
  十进制整数转换二进制整数的方法是 除2取余;十进制小数转换为二进制小数的方法是 乘2取整。
  对于十进制整数采用 除8取余 的方法转换为八进制整数；对于十进制小数则采用 乘8取整 的方法转换为八进制小数。
  二进制数转换为八进制数的方法是：从小数点起，把二进制数每三位分成一组，然后写出每一组的等值八进制数，顺序排列起来就得到所要求的八进制数。
  依照同样的思想，将一位八进制数用三位二进制数表示，就可以直接将八进制数转换成二进制数。
  在十六进制计数中，r=16，基本符号为0-9-A-F。
  十进制数可以转换为十六进制数的方法是：十进制数的整数部分 除16取余 ，十进制数的小数部分 乘16取整 。
  二进制数转换为十六进制数的方法是：从小数点开始，每4位二进制数为一组，将每一组用相应的十六进制数符来表示，即可得到正确的十六进制数。
  
  二进制运算规则：
  加法：二进制加法的进位规则是 逢二进一
  剑法：二进制减法的借位规则是 借一当二
  乘法：0×0=0    1×0=0    1×1=1
  
  机器数和码制
  各种数据在计算机中表示的形式称为机器数，其特点是采用二进制计数制，数的符号用0、1表示，小数点隐含表示而不占位置。机器数对应的实际数值称为数的真值。
  对于带符号数，机器数的最高位是表示正、负的符号位，其余位则表示数值。若约定小数点的位置在机器数的最低数值位之后，则是纯整数；若约定小数点的位置在机器数的
最高数值位之前（符号位之后），则是纯小数。无符号数是针对二进制来讲的，无符号数的表数范围是非负数，即全部二进制位均代表数值，没有符号位。
  为了便于运算，带符号的机器数可采用原码、反码和补码等不同的编码方法。
  原码表示法
  数值X的原码记为[X]原，如果机器字长为n，则最高位是符号位，0或1,其余的n-1位表示数值的绝对值。数值零的原码表示有两种形式：[+0]原=00000000, [-0]原=10000000
  反码表示法
  数值X的反码记为[X]反，如果机器字长为n，则最高位为符号位，0或1,其余的n-1位表示数值。正数的反码与原码相同，负数的反码则是其绝对值按位求反。数值0的反码表示
有两种形式：[+0]反=00000000, [-0]反=11111111
  补码表示法
  正数的补码与原码和反码相同，负数的反码则等于其反码的末尾加1.在补码表示中，-0的补码为00000000。相对于原码和反码表示，补码表示法有一个例外，当符号位为1而
数值位全部为0时，它表示整数2^n-1，即此时符号位的1既表示负数又表示数值。
  移码表示法
  移码表示法是在数X上增加一个偏移量来定义的，常用于表示浮点数中的阶码。如果机器字长为n，在偏移量为2^n-1时，只要将补码的符号位取反便可获得相应的移码表示。
  
  定点数
  所谓定点数，就是表示数据时小数点的位置固定不变。小数点的位置通常有两种约定方式：定点整数（纯整数，小数点在最低有效数值位之后）和定点小数（纯小数，小数点
在最高有效位之前）。
  当机器字长为n时，定点数的补码和移码可表示2^n个数，而其原码和反码只能表示2^n-1个数（0表啊是占用了两个编码），因此，定点数所能表示的数值范围比较小，运算中
很容易因结果超出范围而溢出。
  
  浮点数
  浮点数是小数点位置不固定的数，它能表示更大范围的数。
  一个含小数点的二进制数N可以表示为更一般的形式：
    N=2^E*F
  其中E称为阶码，F为尾数，这种表示数的方法称为浮点表示法。
  在浮点表示法中，阶码通常为带符号数的纯整数，尾数为带符号的纯小数。浮点数的表示格式如下：
    阶符  阶码  数符  尾数
  浮点数所能表示的数值范围主要由阶码决定，所表示数值的精度则由尾数决定。若不对浮点数的表示作出明确规定，同一个浮点数的表示就不是唯一的。
  为了提高数据的表示精度，当尾数的值不为0时，规定尾数域的最高有效位应为1，这称为浮点数的规格化表示。否则修改阶码同时左右移小数点位置的，使其变为规格化数的
形式。规格化就是将尾数的绝对值限定在区间[0.5, 1)。
  
  工业标准IEEE 754
  IEEE 754是由IEEE制定的有关浮点数的工业标准，被广泛采用。该标准的表示形式如下：
    S    P    M
  其中，S为数的符号位，P为指数，用移码表示（偏移值为2^p-1，p为阶码的位数），M为尾数，用原码表示。
  对于阶码为0或255的情况，IEEE 754标准有着特别的规定：
  若P为0且M为0，则表示真值正负0.
